package com.cdweb.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.cdweb.model.Item;
import com.cdweb.service.ProductService;

@Controller
@RequestMapping("cart")
public class CartController {
	@Autowired
	private ProductService productService;
	
	
	@RequestMapping(method = RequestMethod.GET)
    public String index(HttpSession session,ModelMap model) {
	int countItems=0;
	int total=0;
	if (session.getAttribute("cart" )!=null) {
		List<Item> cart=(List<Item>) session.getAttribute("cart");
		countItems=cart.size();
		for(Item item: cart) {
			
			total+=item.getProduct().getProductPrice()*item.getQuantity();
		}
	}
	model.put("countItems", countItems);
	
	model.put("total", total);
	model.put("products", productService.getProductsInCart());
	
        return "cart";
    }
	@RequestMapping(value="buy/{productId}", method = RequestMethod.GET)
    public String buy( @PathVariable("productId") int roomId,HttpSession session) {
		if (session.getAttribute("cart")==null) {
			List<Item> cart= new ArrayList<Item>();
			cart.add(new Item(productService.findById(roomId),1));
			session.setAttribute("cart", cart);
			
		}else {
			List<Item> cart=(List<Item>) session.getAttribute("cart");
			int index=exists(roomId, cart);
			if (index==-1) {
				cart.add(new Item(productService.findById(roomId),1));
			}else {
				int newQuantity=cart.get(index).getQuantity()+1;
				cart.get(index).setQuantity(newQuantity);
			}
		}
	        
        return "redirect:/cart";
    }
	@RequestMapping(value="remove/{index}", method = RequestMethod.GET)
    public String remove( @PathVariable("index") int index,HttpSession session) {
		List<Item> stay=(List<Item>) session.getAttribute("cart"); 
	    stay.remove(index);
	    session.setAttribute("stay", stay);
        return "redirect:/cart";
    }
	
	public int exists(int id,List<Item> cart) {
		for (int i = 0; i < cart.size(); i++) {
			if (cart.get(i).getProduct().getProductId()==id){
				return i;
			}
		}
		return -1;
	}
	
}
